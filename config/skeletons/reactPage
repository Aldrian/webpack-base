import "./%%capitalComponentName%%.less";
import React, { RefObject } from "react";
import {ReactPage} from "../../lib/solidify/react/ReactPage";
import { Helmet } from "react-helmet-async";
import { prepareComponent } from "../../helpers/prepareComponent";

interface IProps {}
interface IStates {}

// prepare
const { component, log } = prepareComponent("%%capitalComponentName%%");

/**
 * @name %%capitalComponentName%%
 */
class %%capitalComponentName%% extends ReactPage<IProps, IStates> {

  // --------------------------------------------------------------------------- INIT

  // get root ref
  protected rootRef: RefObject<HTMLDivElement>;

  constructor(pProps: IProps, pContext: any) {
    // relay
    super(pProps, pContext);
    // create ref
    this.rootRef = React.createRef();
  }

  // --------------------------------------------------------------------------- TRANSITION

  /**
   * Action on this page.
   * Check props.action and props.parameters to show proper content.
   */
  action() {
    // Remove if not used
  }

  /**
   * Play in animation.
   * Call complete handler when animation is done.
   */
  protected playInHandler(pCompleteHandler: () => void) {
    pCompleteHandler();
  }

  /**
   * Play out animation.
   * Call complete handler when animation is done.
   */
  protected playOutHandler(pCompleteHandler: () => void) {
    pCompleteHandler();
  }

  // --------------------------------------------------------------------------- RENDER

  render() {
    return (
      <div className={component} ref={this.rootRef}>
        <Helmet>
          <title>{component}</title>
        </Helmet>
        {component}
      </div>
    );
  }
}

export default %%capitalComponentName%%;
